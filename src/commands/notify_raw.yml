description: Generate an xMatters event with the given JSON payload. See here for details https://help.xmatters.com/xmapi/index.html#trigger-an-event

parameters:
  json_payload:
    default: ""
    description: The json object to send to xMatters.
    type: string
  xm_url:
    default: ${XM_URL}
    description: Enter either your inbound integration url or use the CircleCI UI to add
      your token under the 'XM_URL' env var
    type: string

steps:
  - run:
      name: Provide error if non-bash shell
      command: |
        if [ -z "$BASH" ]; then
          echo Bash not installed.
          exit 1
        fi
  - when:
      condition: on_fail
      steps:
        - run:
            name: xMatters - Setting Failure Condition
            command: |
              echo 'export XM_BUILD_STATUS="fail"' >> $BASH_ENV

  - when:
      condition: on_success
      steps:
        - run:
            name: xMatters - Setting Success Condition
            command: |
              echo 'export XM_BUILD_STATUS="success"' >> $BASH_ENV
  - run:
      name: xMatters Inbound Command
      shell: /bin/bash
      command: |
        # Provide error if no url is set and error. Otherwise continue
        if [ -z "<< parameters.xm_url >>" ]; then
          echo "NO XM_URL SET"
          echo "Please input your XM_URL value either in the settings for this project, or as a parameter for this orb."
          exit 1
        fi
        if [-z "<< parameters.json_payload >>" ]; then
          echo "NO json_payload passed"
          echo "Enter some json to pass into xMatters. CHECKOUTTHEDOCSHERE"
          exit 1
        fi
        # Webhook properly set.
        echo "Generating event to xMatters with payload '" << parameters.json_payload >> "'"
        curl -X POST --header 'Content-type: application/json' \
          --data '<< parameters.json_payload >>' \
          "<< parameters.xm_url >>"
